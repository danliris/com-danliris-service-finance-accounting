// <auto-generated />
using System;
using Com.Danliris.Service.Finance.Accounting.Lib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Com.Danliris.Service.Finance.Accounting.Lib.Migrations
{
    [DbContext(typeof(FinanceDbContext))]
    [Migration("20210819072900_IncomeTaxCreditorAccount")]
    partial class IncomeTaxCreditorAccount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.DownPaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(64);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(64);

                    b.Property<bool>("Active");

                    b.Property<string>("BankName")
                        .HasMaxLength(64);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(64);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(512);

                    b.Property<string>("CategoryAcceptance")
                        .HasMaxLength(64);

                    b.Property<string>("CodeBankCurrency")
                        .HasMaxLength(64);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<DateTimeOffset>("DatePayment");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PaymentFor")
                        .HasMaxLength(64);

                    b.Property<string>("Remark");

                    b.Property<decimal>("TotalPayment");

                    b.HasKey("Id");

                    b.ToTable("DownPayments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.AccountingBook.AccountingBookModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingBookType")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remarks")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("AccountingBooks");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.BudgetCashflow.BudgetCashflowCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("CashflowTypeId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsLabelOnly");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("LayoutOrder");

                    b.Property<string>("Name")
                        .HasMaxLength(512);

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("BudgetCashflowCategories");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.BudgetCashflow.BudgetCashflowSubCategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("CashflowCategoryId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsImport");

                    b.Property<bool>("IsReadOnly");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("LayoutOrder");

                    b.Property<string>("Name")
                        .HasMaxLength(512);

                    b.Property<string>("PurchasingCategoryIds");

                    b.Property<int>("ReportType");

                    b.HasKey("Id");

                    b.ToTable("BudgetCashflowSubCategories");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.BudgetCashflow.BudgetCashflowTypeModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("LayoutOrder");

                    b.Property<string>("Name")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.ToTable("BudgetCashflowTypes");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.BudgetCashflow.BudgetCashflowUnitModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("BudgetCashflowSubCategoryId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyNominal");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("DivisionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Month");

                    b.Property<double>("Nominal");

                    b.Property<double>("Total");

                    b.Property<int>("UnitId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("BudgetCashflowUnits");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.BudgetCashflow.InitialCashBalanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyNominal");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("DivisionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Month");

                    b.Property<double>("Nominal");

                    b.Property<double>("Total");

                    b.Property<int>("UnitId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("InitialCashBalances");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.BudgetCashflow.RealCashBalanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyNominal");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("DivisionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Month");

                    b.Property<double>("Nominal");

                    b.Property<double>("Total");

                    b.Property<int>("UnitId");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("RealCashBalances");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.CreditorAccount.CreditorAccountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("BankExpenditureNoteDPP");

                    b.Property<DateTimeOffset?>("BankExpenditureNoteDate");

                    b.Property<int>("BankExpenditureNoteId");

                    b.Property<decimal>("BankExpenditureNoteMutation");

                    b.Property<string>("BankExpenditureNoteNo")
                        .HasMaxLength(128);

                    b.Property<decimal>("BankExpenditureNotePPN");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<decimal>("CurrencyRate");

                    b.Property<decimal>("DPPCurrency");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode");

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName");

                    b.Property<string>("ExternalPurchaseOrderNo");

                    b.Property<decimal>("FinalBalance");

                    b.Property<decimal>("IncomeTaxAmount");

                    b.Property<string>("IncomeTaxNo")
                        .HasMaxLength(512);

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<decimal>("MemoDPP");

                    b.Property<DateTimeOffset?>("MemoDate");

                    b.Property<decimal>("MemoMutation");

                    b.Property<string>("MemoNo")
                        .HasMaxLength(128);

                    b.Property<decimal>("MemoPPN");

                    b.Property<string>("PaymentDuration")
                        .HasMaxLength(512);

                    b.Property<string>("Products");

                    b.Property<double>("PurchasingMemoAmount");

                    b.Property<int>("PurchasingMemoId");

                    b.Property<string>("PurchasingMemoNo");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(128);

                    b.Property<bool>("SupplierIsImport");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(512);

                    b.Property<string>("UnitCode");

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName");

                    b.Property<decimal>("UnitPaymentCorrectionDPP");

                    b.Property<DateTimeOffset?>("UnitPaymentCorrectionDate");

                    b.Property<int>("UnitPaymentCorrectionId");

                    b.Property<decimal>("UnitPaymentCorrectionMutation");

                    b.Property<string>("UnitPaymentCorrectionNo")
                        .HasMaxLength(128);

                    b.Property<decimal>("UnitPaymentCorrectionPPN");

                    b.Property<decimal>("UnitReceiptMutation");

                    b.Property<decimal>("UnitReceiptNoteDPP");

                    b.Property<DateTimeOffset?>("UnitReceiptNoteDate");

                    b.Property<string>("UnitReceiptNoteNo")
                        .HasMaxLength(128);

                    b.Property<decimal>("UnitReceiptNotePPN");

                    b.Property<decimal>("VATAmount");

                    b.HasKey("Id");

                    b.ToTable("CreditorAccounts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.DailyBankTransaction.BankTransactionMonthlyBalanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountBankId")
                        .HasMaxLength(50);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<double>("InitialBalance");

                    b.Property<double>("InitialBalanceValas");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Month");

                    b.Property<double>("RemainingBalance");

                    b.Property<double>("RemainingBalanceValas");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("BankTransactionMonthlyBalances");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.DailyBankTransaction.DailyBankTransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBankAccountName")
                        .HasMaxLength(100);

                    b.Property<string>("AccountBankAccountNumber")
                        .HasMaxLength(100);

                    b.Property<string>("AccountBankCode")
                        .HasMaxLength(25);

                    b.Property<string>("AccountBankCurrencyCode")
                        .HasMaxLength(100);

                    b.Property<int>("AccountBankCurrencyId")
                        .HasMaxLength(50);

                    b.Property<string>("AccountBankCurrencySymbol")
                        .HasMaxLength(100);

                    b.Property<int>("AccountBankId");

                    b.Property<string>("AccountBankName")
                        .HasMaxLength(100);

                    b.Property<bool>("Active");

                    b.Property<decimal>("AfterNominal");

                    b.Property<decimal>("AfterNominalValas");

                    b.Property<decimal>("BeforeNominal");

                    b.Property<decimal>("BeforeNominalValas");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(25);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(150);

                    b.Property<string>("Code")
                        .HasMaxLength(25);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DestinationBankAccountName")
                        .HasMaxLength(100);

                    b.Property<string>("DestinationBankAccountNumber")
                        .HasMaxLength(100);

                    b.Property<string>("DestinationBankCode")
                        .HasMaxLength(25);

                    b.Property<string>("DestinationBankCurrencyCode")
                        .HasMaxLength(100);

                    b.Property<int>("DestinationBankCurrencyId")
                        .HasMaxLength(50);

                    b.Property<string>("DestinationBankCurrencySymbol")
                        .HasMaxLength(100);

                    b.Property<int>("DestinationBankId");

                    b.Property<string>("DestinationBankName")
                        .HasMaxLength(100);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<decimal>("Nominal");

                    b.Property<decimal>("NominalValas");

                    b.Property<string>("Receiver");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(50);

                    b.Property<string>("ReferenceType")
                        .HasMaxLength(50);

                    b.Property<string>("Remark")
                        .HasMaxLength(500);

                    b.Property<string>("SourceType")
                        .HasMaxLength(50);

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(100);

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.ToTable("DailyBankTransactions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.DPPVATBankExpenditureNote.DPPVATBankExpenditureNoteDetailDoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BillNo");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("CurrencyRate");

                    b.Property<long>("DOId");

                    b.Property<string>("DONo");

                    b.Property<int>("DPPVATBankExpenditureNoteDetailId");

                    b.Property<int>("DPPVATBankExpenditureNoteId");

                    b.Property<int>("DPPVATBankExpenditureNoteItemId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PaymentBill");

                    b.Property<double>("TotalAmount");

                    b.HasKey("Id");

                    b.HasIndex("DPPVATBankExpenditureNoteDetailId");

                    b.ToTable("DPPVATBankExpenditureNoteDetailDos");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.DPPVATBankExpenditureNote.DPPVATBankExpenditureNoteDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Amount");

                    b.Property<string>("BillsNo");

                    b.Property<int>("CategoryId");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(128);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<int>("DPPVATBankExpenditureNoteId");

                    b.Property<int>("DPPVATBankExpenditureNoteItemId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DeliveryOrdersNo");

                    b.Property<string>("DetailSJ");

                    b.Property<DateTimeOffset>("InvoiceDate");

                    b.Property<int>("InvoiceId");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(4000);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PaymentBills");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(512);

                    b.Property<string>("ProductNames");

                    b.HasKey("Id");

                    b.ToTable("DPPVATBankExpenditureNoteDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.DPPVATBankExpenditureNote.DPPVATBankExpenditureNoteItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(32);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("DPP");

                    b.Property<int>("DPPVATBankExpenditureNoteId");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<double>("IncomeTaxAmount");

                    b.Property<DateTimeOffset>("InternalNoteDate");

                    b.Property<int>("InternalNoteId");

                    b.Property<string>("InternalNoteNo")
                        .HasMaxLength(32);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsImportSupplier");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("OutstandingAmount");

                    b.Property<string>("SupplierCode");

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1024);

                    b.Property<double>("TotalAmount");

                    b.Property<double>("VATAmount");

                    b.HasKey("Id");

                    b.ToTable("DPPVATBankExpenditureNoteItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.DPPVATBankExpenditureNote.DPPVATBankExpenditureNoteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Amount");

                    b.Property<string>("BGCheckNo")
                        .HasMaxLength(256);

                    b.Property<int>("BankAccountId");

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(64);

                    b.Property<string>("BankAccountingCode")
                        .HasMaxLength(32);

                    b.Property<string>("BankCurrencyCode")
                        .HasMaxLength(32);

                    b.Property<int>("BankCurrencyId");

                    b.Property<double>("BankCurrencyRate");

                    b.Property<string>("BankName")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(32);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(32);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsImportSupplier");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.ToTable("DPPVATBankExpenditureNotes");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentDebtBalance.GarmentDebtBalanceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("ArrivalDate");

                    b.Property<int>("BankExpenditureNoteId");

                    b.Property<double>("BankExpenditureNoteInvoiceAmount");

                    b.Property<string>("BankExpenditureNoteNo")
                        .HasMaxLength(64);

                    b.Property<string>("BillsNo")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("CurrencyBankExpenditureNoteInvoiceAmount");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(32);

                    b.Property<double>("CurrencyDPPAmount");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyIncomeTaxAmount");

                    b.Property<double>("CurrencyRate");

                    b.Property<double>("CurrencyVATAmount");

                    b.Property<double>("DPPAmount");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("GarmentDeliveryOrderId");

                    b.Property<string>("GarmentDeliveryOrderNo")
                        .HasMaxLength(64);

                    b.Property<double>("IncomeTaxAmount");

                    b.Property<int>("InternalNoteId");

                    b.Property<string>("InternalNoteNo")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("InvoiceDate");

                    b.Property<int>("InvoiceId");

                    b.Property<string>("InvoiceNo")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPayIncomeTax");

                    b.Property<bool>("IsPayVAT");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("MemoAmount");

                    b.Property<int>("MemoDetailId");

                    b.Property<string>("MemoNo");

                    b.Property<string>("PaymentBills")
                        .HasMaxLength(256);

                    b.Property<double>("PaymentRate");

                    b.Property<string>("PaymentType")
                        .HasMaxLength(128);

                    b.Property<string>("ProductNames");

                    b.Property<int>("PurchasingCategoryId");

                    b.Property<string>("PurchasingCategoryName")
                        .HasMaxLength(64);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(256);

                    b.Property<int>("SupplierId");

                    b.Property<bool>("SupplierIsImport");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(512);

                    b.Property<double>("VATAmount");

                    b.Property<string>("VATNo")
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("GarmentDebtBalances");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentDispositionExpedition.GarmentDispositionExpeditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingAcceptedBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("AccountingAcceptedDate");

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset>("BankExpenditureNoteDate");

                    b.Property<string>("BankExpenditureNoteNo");

                    b.Property<string>("CashierAcceptedBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("CashierAcceptedDate");

                    b.Property<string>("Category");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(16);

                    b.Property<double>("CurrencyDPPAmount");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyIncomeTaxAmount");

                    b.Property<double>("CurrencyRate");

                    b.Property<double>("CurrencyTotalPaid");

                    b.Property<double>("CurrencyVATAmount");

                    b.Property<double>("DPPAmount");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DispositionNoteDate");

                    b.Property<DateTimeOffset>("DispositionNoteDueDate");

                    b.Property<int>("DispositionNoteId");

                    b.Property<string>("DispositionNoteNo")
                        .HasMaxLength(64);

                    b.Property<double>("IncomeTaxAmount");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Position");

                    b.Property<string>("ProformaNo");

                    b.Property<string>("Remark");

                    b.Property<string>("SendToAccountingBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("SendToAccountingDate");

                    b.Property<string>("SendToCashierBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("SendToCashierDate");

                    b.Property<string>("SendToPurchasingBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("SendToPurchasingDate");

                    b.Property<string>("SendToPurchasingRemark");

                    b.Property<string>("SendToVerificationBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("SendToVerificationDate");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(128);

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(512);

                    b.Property<double>("TotalPaid");

                    b.Property<double>("VATAmount");

                    b.Property<string>("VerificationAcceptedBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("VerificationAcceptedDate");

                    b.Property<string>("VerifiedBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("VerifiedDate");

                    b.Property<DateTimeOffset>("VerifiedDateReceived");

                    b.Property<DateTimeOffset>("VerifiedDateSend");

                    b.HasKey("Id");

                    b.ToTable("GarmentDispositionExpeditions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentFinance.BankCashReceipt.BankCashReceiptItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccAmountCoaCode")
                        .HasMaxLength(32);

                    b.Property<int>("AccAmountCoaId");

                    b.Property<string>("AccAmountCoaName")
                        .HasMaxLength(256);

                    b.Property<string>("AccNumberCoaCode")
                        .HasMaxLength(32);

                    b.Property<int>("AccNumberCoaId");

                    b.Property<string>("AccNumberCoaName")
                        .HasMaxLength(256);

                    b.Property<string>("AccSubCoaCode")
                        .HasMaxLength(32);

                    b.Property<int>("AccSubCoaId");

                    b.Property<string>("AccSubCoaName")
                        .HasMaxLength(256);

                    b.Property<string>("AccUnitCoaCode")
                        .HasMaxLength(32);

                    b.Property<int>("AccUnitCoaId");

                    b.Property<string>("AccUnitCoaName")
                        .HasMaxLength(256);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount");

                    b.Property<int>("BankCashReceiptId");

                    b.Property<decimal>("C1A");

                    b.Property<decimal>("C1B");

                    b.Property<decimal>("C2A");

                    b.Property<decimal>("C2B");

                    b.Property<decimal>("C2C");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NoteNumber")
                        .HasMaxLength(256);

                    b.Property<string>("Remarks")
                        .HasMaxLength(1024);

                    b.Property<decimal>("Summary");

                    b.HasKey("Id");

                    b.HasIndex("BankCashReceiptId");

                    b.ToTable("GarmentFinanceBankCashReceiptItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentFinance.BankCashReceipt.BankCashReceiptModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount");

                    b.Property<string>("BankAccountCOA")
                        .HasMaxLength(32);

                    b.Property<int>("BankAccountId");

                    b.Property<string>("BankAccountName")
                        .HasMaxLength(256);

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(64);

                    b.Property<string>("BankAccountingCode")
                        .HasMaxLength(32);

                    b.Property<string>("BankCurrencyCode")
                        .HasMaxLength(32);

                    b.Property<int>("BankCurrencyId");

                    b.Property<double>("BankCurrencyRate");

                    b.Property<string>("BankName")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<string>("DebitCoaCode")
                        .HasMaxLength(32);

                    b.Property<int>("DebitCoaId");

                    b.Property<string>("DebitCoaName")
                        .HasMaxLength(256);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("IncomeType")
                        .HasMaxLength(256);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NumberingCode")
                        .HasMaxLength(32);

                    b.Property<DateTimeOffset>("ReceiptDate");

                    b.Property<string>("ReceiptNo")
                        .HasMaxLength(256);

                    b.Property<string>("Remarks")
                        .HasMaxLength(1024);

                    b.HasKey("Id");

                    b.ToTable("GarmentFinanceBankCashReceipts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentFinance.Memorial.GarmentFinanceMemorialItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("COACode")
                        .HasMaxLength(20);

                    b.Property<int>("COAId");

                    b.Property<string>("COAName")
                        .HasMaxLength(100);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("Credit");

                    b.Property<double>("Debit");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MemorialId");

                    b.HasKey("Id");

                    b.HasIndex("MemorialId");

                    b.ToTable("GarmentFinanceMemorialItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentFinance.Memorial.GarmentFinanceMemorialModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingBookCode")
                        .HasMaxLength(10);

                    b.Property<int>("AccountingBookId");

                    b.Property<string>("AccountingBookType")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("GarmentCurrencyCode")
                        .HasMaxLength(20);

                    b.Property<int>("GarmentCurrencyId");

                    b.Property<double>("GarmentCurrencyRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MemorialNo")
                        .HasMaxLength(20);

                    b.Property<string>("Remark")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.ToTable("GarmentFinanceMemorials");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentInvoicePayment.GarmentInvoicePaymentItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<decimal>("IDRAmount");

                    b.Property<int>("InvoiceId");

                    b.Property<string>("InvoiceNo");

                    b.Property<int>("InvoicePaymentId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.HasKey("Id");

                    b.HasIndex("InvoicePaymentId");

                    b.ToTable("GarmentInvoicePaymentItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentInvoicePayment.GarmentInvoicePaymentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BGNo")
                        .HasMaxLength(100);

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(255);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("InvoicePaymentNo")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("PaymentDate");

                    b.Property<string>("Remark")
                        .HasMaxLength(4000);

                    b.HasKey("Id");

                    b.ToTable("GarmentInvoicePayments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentInvoicePurchasingDisposition.GarmentInvoicePurchasingDispositionItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("Category");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DipositionDueDate");

                    b.Property<DateTimeOffset>("DispositionDate");

                    b.Property<int>("DispositionId");

                    b.Property<string>("DispositionNo");

                    b.Property<int>("GarmentInvoicePurchasingDispositionId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ProformaNo");

                    b.Property<int>("PurchasingDispositionExpeditionId");

                    b.Property<string>("SupplierName");

                    b.Property<double>("TotalAmount");

                    b.Property<double>("TotalPaid");

                    b.Property<double>("TotalPaidBefore");

                    b.Property<double>("VATAmount");

                    b.HasKey("Id");

                    b.HasIndex("GarmentInvoicePurchasingDispositionId");

                    b.ToTable("GarmentInvoicePurchasingDispositionItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentInvoicePurchasingDisposition.GarmentInvoicePurchasingDispositionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BankAccountName");

                    b.Property<string>("BankAccountNo");

                    b.Property<string>("BankCode");

                    b.Property<string>("BankCurrencyCode");

                    b.Property<int>("BankCurrencyId");

                    b.Property<int>("BankId");

                    b.Property<string>("BankName");

                    b.Property<string>("BankSwiftCode");

                    b.Property<string>("ChequeNo");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<DateTimeOffset>("CurrencyDate");

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("InvoiceDate");

                    b.Property<string>("InvoiceNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsImportSupplier");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("PaymentType");

                    b.Property<string>("SupplierCode");

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName");

                    b.HasKey("Id");

                    b.ToTable("GarmentInvoicePurchasingDispositions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentPurchasingExpedition.GarmentPurchasingExpeditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingAcceptedBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("AccountingAcceptedDate");

                    b.Property<bool>("Active");

                    b.Property<string>("CashierAcceptedBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("CashierAcceptedDate");

                    b.Property<double>("CorrectionAmount");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(16);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("DPP");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<double>("IncomeTax");

                    b.Property<DateTimeOffset>("InternalNoteDate");

                    b.Property<DateTimeOffset>("InternalNoteDueDate");

                    b.Property<int>("InternalNoteId");

                    b.Property<string>("InternalNoteNo")
                        .HasMaxLength(64);

                    b.Property<string>("InvoicesNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PaymentDueDays");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(512);

                    b.Property<string>("PaymentType")
                        .HasMaxLength(512);

                    b.Property<int>("Position");

                    b.Property<string>("Remark");

                    b.Property<string>("SendToAccountingBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("SendToAccountingDate");

                    b.Property<string>("SendToCashierBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("SendToCashierDate");

                    b.Property<string>("SendToPurchasingBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("SendToPurchasingDate");

                    b.Property<string>("SendToPurchasingRemark");

                    b.Property<string>("SendToVerificationBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("SendToVerificationDate");

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(512);

                    b.Property<double>("TotalPaid");

                    b.Property<double>("VAT");

                    b.Property<string>("VerificationAcceptedBy")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("VerificationAcceptedDate");

                    b.HasKey("Id");

                    b.ToTable("GarmentPurchasingExpeditions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentPurchasingPphBankExpenditureNote.GarmentPurchasingPphBankExpenditureNoteInvoiceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BillNo");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DoNo");

                    b.Property<int>("GarmentPurchasingPphBankExpenditureNoteItemId");

                    b.Property<DateTimeOffset>("InvoicesDate");

                    b.Property<long>("InvoicesId");

                    b.Property<string>("InvoicesNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NPH");

                    b.Property<string>("PaymentBill");

                    b.Property<string>("ProductCategory");

                    b.Property<string>("ProductCode");

                    b.Property<long>("ProductId");

                    b.Property<string>("ProductName");

                    b.Property<decimal>("Total");

                    b.Property<string>("UnitCode");

                    b.Property<string>("UnitId");

                    b.Property<string>("UnitName");

                    b.HasKey("Id");

                    b.HasIndex("GarmentPurchasingPphBankExpenditureNoteItemId");

                    b.ToTable("GarmentPurchasingPphBankExpenditureNoteInvoices");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentPurchasingPphBankExpenditureNote.GarmentPurchasingPphBankExpenditureNoteItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("AmountDPP");

                    b.Property<double>("CorrectionAmount");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<int>("CurrencyId");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<int>("GarmentPurchasingPphBankExpenditureNoteId");

                    b.Property<int>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<double>("IncomeTaxTotal");

                    b.Property<int>("InternalNotesId");

                    b.Property<string>("InternalNotesNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PaymentDueDays");

                    b.Property<string>("PaymentMethod");

                    b.Property<string>("PaymentType");

                    b.Property<string>("SupplierCode");

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName");

                    b.Property<double>("TotalPaid");

                    b.Property<double>("VAT");

                    b.HasKey("Id");

                    b.HasIndex("GarmentPurchasingPphBankExpenditureNoteId");

                    b.ToTable("GarmentPurchasingPphBankExpenditureNoteItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentPurchasingPphBankExpenditureNote.GarmentPurchasingPphBankExpenditureNoteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountBankCOA");

                    b.Property<string>("AccountBankName");

                    b.Property<string>("AccountBankNumber");

                    b.Property<bool>("Active");

                    b.Property<string>("BankAddress");

                    b.Property<string>("BankCode");

                    b.Property<string>("BankCode1");

                    b.Property<string>("BankCurrencyCode");

                    b.Property<int>("BankCurrencyId");

                    b.Property<string>("BankName");

                    b.Property<string>("BankSwiftCode");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DueDateEnd");

                    b.Property<DateTimeOffset>("DueDateStart");

                    b.Property<int>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<DateTimeOffset>("InvoiceOutDate");

                    b.Property<string>("InvoiceOutNumber");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.HasKey("Id");

                    b.ToTable("GarmentPurchasingPphBankExpenditureNotes");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("COAId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("JournalTransactionId");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.HasIndex("COAId");

                    b.HasIndex("JournalTransactionId");

                    b.ToTable("JournalTransactionItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsReversed");

                    b.Property<bool>("IsReverser");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("ReferenceNo")
                        .HasMaxLength(250);

                    b.Property<string>("Remark");

                    b.Property<string>("Status")
                        .HasMaxLength(25);

                    b.HasKey("Id");

                    b.ToTable("JournalTransactions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("Division");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Month");

                    b.Property<int>("Number");

                    b.Property<int>("Year");

                    b.HasKey("Id");

                    b.ToTable("JournalTransactionNumbers");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.LockTransaction.LockTransactionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActiveStatus");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("LockDate");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("LockTransactions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.MasterCOA.COAModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CashAccount");

                    b.Property<string>("Code");

                    b.Property<string>("Code1");

                    b.Property<string>("Code2");

                    b.Property<string>("Code3");

                    b.Property<string>("Code4");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("Header");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Name");

                    b.Property<string>("Nature");

                    b.Property<string>("Path");

                    b.Property<string>("ReportType");

                    b.Property<string>("Subheader");

                    b.HasKey("Id");

                    b.ToTable("ChartsOfAccounts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.Memo.MemoItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<decimal>("Interest");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MemoId");

                    b.Property<decimal>("PaymentAmount");

                    b.HasKey("Id");

                    b.HasIndex("MemoId");

                    b.ToTable("MemoItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.Memo.MemoModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BuyerCode")
                        .HasMaxLength(64);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(512);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MemoType")
                        .HasMaxLength(64);

                    b.Property<string>("Remark");

                    b.Property<int>("SalesInvoiceId");

                    b.Property<string>("SalesInvoiceNo")
                        .HasMaxLength(64);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("Memos");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.MemoGarmentPurchasing.MemoDetailGarmentPurchasingDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("BillsNo");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("GarmentDeliveryOrderId");

                    b.Property<string>("GarmentDeliveryOrderNo");

                    b.Property<string>("InternalNoteNo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MemoAmount");

                    b.Property<int>("MemoDetailId");

                    b.Property<int>("MemoDispositionId");

                    b.Property<int>("MemoId");

                    b.Property<int>("MemoIdrAmount");

                    b.Property<string>("PaymentBills");

                    b.Property<double>("PaymentRate");

                    b.Property<double>("PurchaseAmount");

                    b.Property<double>("PurchasingRate");

                    b.Property<string>("RemarksDetail");

                    b.Property<string>("SupplierCode");

                    b.Property<string>("SupplierName");

                    b.HasKey("Id");

                    b.ToTable("MemoDetailGarmentPurchasingDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.MemoGarmentPurchasing.MemoDetailGarmentPurchasingDispositionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("DispositionId");

                    b.Property<string>("DispositionNo")
                        .HasMaxLength(128);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MemoDetailGarmentPurchasingId");

                    b.HasKey("Id");

                    b.ToTable("MemoDetailGarmentPurchasingDispositions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.MemoGarmentPurchasing.MemoDetailGarmentPurchasingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountingBookId");

                    b.Property<string>("AccountingBookType");

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("GarmentCurrenciesCode");

                    b.Property<int>("GarmentCurrenciesId");

                    b.Property<int>("GarmentCurrenciesRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("MemoDate");

                    b.Property<int>("MemoId");

                    b.Property<string>("MemoNo");

                    b.Property<string>("Remarks");

                    b.HasKey("Id");

                    b.ToTable("MemoDetailGarmentPurchasings");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.MemoGarmentPurchasing.MemoGarmentPurchasingDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("COAId");

                    b.Property<string>("COAName");

                    b.Property<string>("COANo");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<int>("CreditNominal");

                    b.Property<int>("DebitNominal");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("MemoId");

                    b.HasKey("Id");

                    b.HasIndex("MemoId");

                    b.ToTable("MemoGarmentPurchasingDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.MemoGarmentPurchasing.MemoGarmentPurchasingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingBookCode");

                    b.Property<int>("AccountingBookId");

                    b.Property<string>("AccountingBookType");

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("GarmentCurrenciesCode");

                    b.Property<int>("GarmentCurrenciesId");

                    b.Property<int>("GarmentCurrenciesRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("MemoDate");

                    b.Property<string>("MemoNo");

                    b.Property<string>("Remarks");

                    b.Property<int>("TotalAmount");

                    b.HasKey("Id");

                    b.ToTable("MemoGarmentPurchasings");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.OthersExpenditureProofDocument.OthersExpenditureProofDocumentItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<int>("COAId");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<decimal>("Debit");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("OthersExpenditureProofDocumentId");

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.ToTable("OthersExpenditureProofDocumentItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.OthersExpenditureProofDocument.OthersExpenditureProofDocumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountBankId");

                    b.Property<bool>("Active");

                    b.Property<string>("CekBgNo");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("CurrencyRate");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(32);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.Property<string>("Type")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("OthersExpenditureProofDocuments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("EPOId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PaymentDispositionNoteItemId");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<int>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<int>("PurchasingDispositionDetailId");

                    b.Property<int>("PurchasingDispositionExpeditionItemId");

                    b.Property<double>("Quantity");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<int>("UomId");

                    b.Property<string>("UomUnit")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("PaymentDispositionNoteItemId");

                    b.ToTable("PaymentDispositionNoteDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<int>("CategoryId");

                    b.Property<string>("CategoryName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("DPP");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DispositionDate");

                    b.Property<int>("DispositionId");

                    b.Property<string>("DispositionNo")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(500);

                    b.Property<double>("IncomeTaxValue");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("PayToSupplier");

                    b.Property<int>("PaymentDispositionNoteId");

                    b.Property<DateTimeOffset>("PaymentDueDate");

                    b.Property<string>("ProformaNo")
                        .HasMaxLength(255);

                    b.Property<int>("PurchasingDispositionExpeditionId");

                    b.Property<double>("TotalPaid");

                    b.Property<double>("VatValue");

                    b.HasKey("Id");

                    b.HasIndex("PaymentDispositionNoteId");

                    b.ToTable("PaymentDispositionNoteItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("Amount");

                    b.Property<string>("BGCheckNumber")
                        .HasMaxLength(255);

                    b.Property<string>("BankAccountCOA");

                    b.Property<string>("BankAccountName")
                        .HasMaxLength(1000);

                    b.Property<string>("BankAccountNumber")
                        .HasMaxLength(255);

                    b.Property<string>("BankCode")
                        .HasMaxLength(255);

                    b.Property<string>("BankCurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("BankCurrencyId");

                    b.Property<double>("BankCurrencyRate");

                    b.Property<int>("BankId");

                    b.Property<string>("BankName")
                        .HasMaxLength(1000);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<DateTimeOffset>("PaymentDate");

                    b.Property<string>("PaymentDispositionNo")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<int>("SupplierId");

                    b.Property<bool>("SupplierImport");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(1000);

                    b.Property<string>("TransactionType")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("PaymentDispositionNotes");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingDispositionExpedition.PurchasingDispositionExpeditionItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("EPOId");

                    b.Property<string>("EPONo");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(255);

                    b.Property<string>("ProductId")
                        .HasMaxLength(50);

                    b.Property<string>("ProductName")
                        .HasMaxLength(255);

                    b.Property<int>("PurchasingDispositionDetailId");

                    b.Property<int>("PurchasingDispositionExpeditionId");

                    b.Property<double>("Quantity");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(255);

                    b.Property<string>("UnitId")
                        .HasMaxLength(50);

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.Property<string>("UomId");

                    b.Property<string>("UomUnit");

                    b.HasKey("Id");

                    b.HasIndex("PurchasingDispositionExpeditionId");

                    b.ToTable("PurchasingDispositionExpeditionItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingDispositionExpedition.PurchasingDispositionExpeditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<DateTimeOffset?>("BankExpenditureNoteDate");

                    b.Property<string>("BankExpenditureNoteNo");

                    b.Property<DateTimeOffset?>("BankExpenditureNotePPHDate");

                    b.Property<string>("BankExpenditureNotePPHNo");

                    b.Property<string>("CashierDivisionBy");

                    b.Property<DateTimeOffset?>("CashierDivisionDate");

                    b.Property<string>("CategoryCode")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryId")
                        .HasMaxLength(255);

                    b.Property<string>("CategoryName")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<string>("CurrencyId")
                        .HasMaxLength(50);

                    b.Property<double>("DPP");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DispositionDate");

                    b.Property<string>("DispositionId");

                    b.Property<string>("DispositionNo");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionId")
                        .HasMaxLength(255);

                    b.Property<string>("DivisionName")
                        .HasMaxLength(255);

                    b.Property<string>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<double>("IncomeTaxValue");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaid");

                    b.Property<bool>("IsPaidPPH");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NotVerifiedReason");

                    b.Property<double>("PayToSupplier");

                    b.Property<DateTimeOffset>("PaymentDueDate");

                    b.Property<string>("PaymentMethod");

                    b.Property<int>("Position");

                    b.Property<string>("ProformaNo");

                    b.Property<string>("SendToCashierDivisionBy");

                    b.Property<DateTimeOffset?>("SendToCashierDivisionDate");

                    b.Property<string>("SendToPurchasingDivisionBy");

                    b.Property<DateTimeOffset?>("SendToPurchasingDivisionDate");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierId")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(255);

                    b.Property<double>("TotalPaid");

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.Property<double>("VatValue");

                    b.Property<string>("VerificationDivisionBy");

                    b.Property<DateTimeOffset?>("VerificationDivisionDate");

                    b.Property<DateTimeOffset?>("VerifyDate");

                    b.HasKey("Id");

                    b.ToTable("PurchasingDispositionExpeditions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingMemoDetailTextile.PurchasingMemoDetailTextileDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("ExpenditureDate");

                    b.Property<int>("ExpenditureId");

                    b.Property<string>("ExpenditureNo")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("PaymentAmount");

                    b.Property<double>("PaymentAmountCurrency");

                    b.Property<double>("PurchaseAmount");

                    b.Property<double>("PurchaseAmountCurrency");

                    b.Property<int>("PurchasingMemoDetailTextileId");

                    b.Property<int>("PurchasingMemoDetailTextileItemId");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(64);

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(512);

                    b.Property<DateTimeOffset>("UnitPaymentOrderDate");

                    b.Property<int>("UnitPaymentOrderId");

                    b.Property<string>("UnitPaymentOrderNo")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("PurchasingMemoDetailTextileDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingMemoDetailTextile.PurchasingMemoDetailTextileItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DispositionDate");

                    b.Property<int>("DispositionId");

                    b.Property<string>("DispositionNo")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PurchasingMemoDetailTextileId");

                    b.HasKey("Id");

                    b.ToTable("PurchasingMemoDetailTextileItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingMemoDetailTextile.PurchasingMemoDetailTextileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(64);

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(128);

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(32);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.Property<bool>("SupplierIsImport");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("PurchasingMemoDetailTextiles");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingMemoDetailTextile.PurchasingMemoDetailTextileUnitReceiptNoteModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PurchasingMemoDetailTextileDetailId");

                    b.Property<int>("PurchasingMemoDetailTextileId");

                    b.Property<int>("PurchasingMemoDetailTextileItemId");

                    b.Property<DateTimeOffset>("UnitReceiptNoteDate");

                    b.Property<int>("UnitReceiptNoteId");

                    b.Property<string>("UnitReceiptNoteNo")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.ToTable("PurchasingMemoDetailTextileUnitReceiptNotes");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingMemoTextile.PurchasingMemoTextileItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("ChartOfAccountCode");

                    b.Property<int>("ChartOfAccountId");

                    b.Property<string>("ChartOfAccountName");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("CreditAmount");

                    b.Property<double>("DebitAmount");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("PurchasingMemoTextileId");

                    b.HasKey("Id");

                    b.ToTable("PurchasingMemoTextileItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingMemoTextile.PurchasingMemoTextileModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountingBookCode")
                        .HasMaxLength(128);

                    b.Property<int>("AccountingBookId");

                    b.Property<string>("AccountingBookType")
                        .HasMaxLength(256);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPosted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("MemoDetailCurrencyCode")
                        .HasMaxLength(32);

                    b.Property<int>("MemoDetailCurrencyId");

                    b.Property<double>("MemoDetailCurrencyRate");

                    b.Property<DateTimeOffset>("MemoDetailDate");

                    b.Property<string>("MemoDetailDocumentNo")
                        .HasMaxLength(32);

                    b.Property<int>("MemoDetailId");

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.ToTable("PurchasingMemoTextiles");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.SalesReceipt.SalesReceiptDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<DateTimeOffset>("DueDate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsPaidOff");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Nominal");

                    b.Property<double>("OverPaid");

                    b.Property<double>("Paid");

                    b.Property<int>("SalesInvoiceId");

                    b.Property<string>("SalesInvoiceNo")
                        .HasMaxLength(255);

                    b.Property<int>("SalesReceiptId");

                    b.Property<double>("Tempo");

                    b.Property<double>("TotalPaid");

                    b.Property<double>("TotalPayment");

                    b.Property<double>("Unpaid");

                    b.Property<string>("VatType")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("SalesReceiptId");

                    b.ToTable("SalesReceiptDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.SalesReceipt.SalesReceiptModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .HasMaxLength(255);

                    b.Property<string>("AccountNumber")
                        .HasMaxLength(255);

                    b.Property<bool>("Active");

                    b.Property<double>("AdministrationFee");

                    b.Property<long>("AutoIncreament");

                    b.Property<string>("BankCode")
                        .HasMaxLength(255);

                    b.Property<int>("BankId");

                    b.Property<string>("BankName")
                        .HasMaxLength(255);

                    b.Property<string>("BuyerAddress")
                        .HasMaxLength(1000);

                    b.Property<int>("BuyerId");

                    b.Property<string>("BuyerName")
                        .HasMaxLength(255);

                    b.Property<string>("Code")
                        .HasMaxLength(255);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(255);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(255);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("OriginAccountNumber")
                        .HasMaxLength(255);

                    b.Property<DateTimeOffset>("SalesReceiptDate");

                    b.Property<string>("SalesReceiptNo")
                        .HasMaxLength(255);

                    b.Property<double>("TotalPaid");

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("SalesReceipts");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VbNonPORequest.VbRequestDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Conversion");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<decimal>("DealQuantity");

                    b.Property<string>("DealUOMId")
                        .HasMaxLength(64);

                    b.Property<string>("DealUOMUnit")
                        .HasMaxLength(64);

                    b.Property<decimal>("DefaultQuantity");

                    b.Property<string>("DefaultUOMId")
                        .HasMaxLength(64);

                    b.Property<string>("DefaultUOMUnit")
                        .HasMaxLength(64);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DetailOthers")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsUseVat");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<bool>("POExtUseVat");

                    b.Property<int>("POId");

                    b.Property<string>("PONo")
                        .HasMaxLength(64);

                    b.Property<decimal>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(64);

                    b.Property<string>("ProductId")
                        .HasMaxLength(64);

                    b.Property<string>("ProductName")
                        .HasMaxLength(64);

                    b.Property<string>("ProductRemark")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.Property<int>("VBId");

                    b.Property<string>("VBNo")
                        .HasMaxLength(64);

                    b.HasKey("Id");

                    b.HasIndex("VBId");

                    b.ToTable("VbRequestsDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VBRealizationDocument.VBRealizationDocumentExpenditureItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BLAWBNumber")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(64);

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(512);

                    b.Property<string>("IncomeTaxBy")
                        .HasMaxLength(64);

                    b.Property<int>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(64);

                    b.Property<double>("IncomeTaxRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<decimal>("PPhAmount");

                    b.Property<decimal>("PPnAmount");

                    b.Property<string>("Remark");

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(64);

                    b.Property<int>("SupplierId");

                    b.Property<string>("SupplierName")
                        .HasMaxLength(512);

                    b.Property<int>("UnitPaymentOrderId");

                    b.Property<string>("UnitPaymentOrderNo")
                        .HasMaxLength(64);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.Property<int>("VBRealizationDocumentId");

                    b.HasKey("Id");

                    b.ToTable("VBRealizationDocumentExpenditureItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VBRealizationDocument.VBRealizationDocumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BLAWBNumber")
                        .HasMaxLength(256);

                    b.Property<string>("CompletedBy");

                    b.Property<DateTimeOffset?>("CompletedDate");

                    b.Property<string>("ContractPONumber")
                        .HasMaxLength(256);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<string>("CurrencyDescription")
                        .HasMaxLength(256);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(64);

                    b.Property<int>("DocumentType");

                    b.Property<int>("Index");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsInklaring");

                    b.Property<bool>("IsVerified");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NotVerifiedReason");

                    b.Property<int>("Position");

                    b.Property<string>("Remark");

                    b.Property<string>("SuppliantDivisionCode")
                        .HasMaxLength(64);

                    b.Property<int>("SuppliantDivisionId");

                    b.Property<string>("SuppliantDivisionName")
                        .HasMaxLength(64);

                    b.Property<string>("SuppliantUnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("SuppliantUnitId");

                    b.Property<string>("SuppliantUnitName")
                        .HasMaxLength(64);

                    b.Property<int>("Type");

                    b.Property<string>("VBNonPoType")
                        .HasMaxLength(32);

                    b.Property<decimal>("VBRequestDocumentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("VBRequestDocumentCreatedBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("VBRequestDocumentDate");

                    b.Property<int>("VBRequestDocumentId");

                    b.Property<string>("VBRequestDocumentNo")
                        .HasMaxLength(64);

                    b.Property<string>("VBRequestDocumentPurpose");

                    b.Property<DateTimeOffset?>("VBRequestDocumentRealizationEstimationDate");

                    b.Property<DateTimeOffset?>("VerificationDate");

                    b.Property<string>("VerifiedBy")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.ToTable("VBRealizationDocuments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VBRealizationDocument.VBRealizationDocumentUnitCostsItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(64);

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(256);

                    b.Property<string>("IncomeTaxBy");

                    b.Property<int>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName");

                    b.Property<double>("IncomeTaxRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsSelected");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("Remark");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(256);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.Property<int>("VBDocumentLayoutOrder");

                    b.Property<int>("VBRealizationDocumentExpenditureItemId");

                    b.Property<int>("VBRealizationDocumentId");

                    b.HasKey("Id");

                    b.ToTable("VBRealizationDocumentUnitCostsItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VBRealizationDocumentExpedition.VBRealizationDocumentExpeditionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CashierReceiptBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("CashierReceiptDate");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NotVerifiedBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("NotVerifiedDate");

                    b.Property<string>("NotVerifiedReason");

                    b.Property<int>("Position");

                    b.Property<string>("Purpose");

                    b.Property<string>("SendToVerificationBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("SendToVerificationDate");

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.Property<decimal>("VBAmount");

                    b.Property<int>("VBId");

                    b.Property<string>("VBNo")
                        .HasMaxLength(64);

                    b.Property<decimal>("VBRealizationAmount");

                    b.Property<DateTimeOffset>("VBRealizationDate");

                    b.Property<int>("VBRealizationId");

                    b.Property<string>("VBRealizationNo")
                        .HasMaxLength(64);

                    b.Property<string>("VBRequestName")
                        .HasMaxLength(256);

                    b.Property<int>("VBType")
                        .HasMaxLength(64);

                    b.Property<string>("VerificationReceiptBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("VerificationReceiptDate");

                    b.Property<string>("VerifiedToCashierBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("VerifiedToCashierDate");

                    b.HasKey("Id");

                    b.ToTable("VBRealizationDocumentExpeditions");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VBRequestDocument.VBRequestDocumentEPODetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<int>("EPOId");

                    b.Property<string>("EPONo")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("VBRequestDocumentId");

                    b.Property<int>("VBRequestDocumentItemId");

                    b.HasKey("Id");

                    b.ToTable("VBRequestDocumentEPODetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VBRequestDocument.VBRequestDocumentItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<double>("AmountByUnit");

                    b.Property<double>("Conversion");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<double>("DealQuantity");

                    b.Property<int>("DealUOMId");

                    b.Property<string>("DealUOMUnit")
                        .HasMaxLength(64);

                    b.Property<double>("DefaultQuantity");

                    b.Property<int>("DefaultUOMId");

                    b.Property<string>("DefaultUOMUnit")
                        .HasMaxLength(64);

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionCode")
                        .HasMaxLength(64);

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName")
                        .HasMaxLength(256);

                    b.Property<int>("EPOId");

                    b.Property<string>("IncomeTaxBy")
                        .HasMaxLength(64);

                    b.Property<int>("IncomeTaxId");

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(64);

                    b.Property<double>("IncomeTaxRate");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsSelected");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<double>("Price");

                    b.Property<string>("ProductCode")
                        .HasMaxLength(64);

                    b.Property<int>("ProductId");

                    b.Property<string>("ProductName")
                        .HasMaxLength(512);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitName")
                        .HasMaxLength(256);

                    b.Property<bool>("UseIncomeTax");

                    b.Property<bool>("UseVat");

                    b.Property<int>("VBDocumentLayoutOrder");

                    b.Property<int>("VBRequestDocumentEPODetailId");

                    b.Property<int>("VBRequestDocumentId");

                    b.HasKey("Id");

                    b.ToTable("VBRequestDocumentItems");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VBRequestDocument.VBRequestDocumentModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTimeOffset?>("ApprovalDate");

                    b.Property<int>("ApprovalStatus");

                    b.Property<string>("ApprovedBy")
                        .HasMaxLength(256);

                    b.Property<string>("BankAccountCOA");

                    b.Property<string>("BankAccountName");

                    b.Property<string>("BankAccountNumber");

                    b.Property<string>("BankBankCode");

                    b.Property<string>("BankBankName");

                    b.Property<string>("BankCode");

                    b.Property<string>("BankCurrencyCode");

                    b.Property<string>("BankCurrencyDescription");

                    b.Property<long>("BankCurrencyId");

                    b.Property<double>("BankCurrencyRate");

                    b.Property<string>("BankCurrencySymbol");

                    b.Property<string>("BankDocumentNo");

                    b.Property<int>("BankId");

                    b.Property<string>("CanceledBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("CancellationDate");

                    b.Property<string>("CancellationReason");

                    b.Property<string>("CompletedBy")
                        .HasMaxLength(256);

                    b.Property<DateTimeOffset?>("CompletedDate");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<string>("CurrencyDescription")
                        .HasMaxLength(256);

                    b.Property<int>("CurrencyId");

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("Date");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DocumentNo")
                        .HasMaxLength(64);

                    b.Property<int>("Index");

                    b.Property<bool>("IsCompleted");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsInklaring");

                    b.Property<bool>("IsPosted");

                    b.Property<bool>("IsRealized");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NoBL");

                    b.Property<string>("NoPO");

                    b.Property<string>("Purpose");

                    b.Property<DateTimeOffset>("RealizationEstimationDate");

                    b.Property<string>("SuppliantDivisionCode")
                        .HasMaxLength(64);

                    b.Property<int>("SuppliantDivisionId");

                    b.Property<string>("SuppliantDivisionName")
                        .HasMaxLength(256);

                    b.Property<string>("SuppliantUnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("SuppliantUnitId");

                    b.Property<string>("SuppliantUnitName")
                        .HasMaxLength(256);

                    b.Property<int>("Type");

                    b.Property<string>("TypePurchasing");

                    b.HasKey("Id");

                    b.ToTable("VBRequestDocuments");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.RealizationVbDetailModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("AmountNonPO");

                    b.Property<string>("CodeProductSPB")
                        .HasMaxLength(64);

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<string>("CurrencyId")
                        .HasMaxLength(64);

                    b.Property<double>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset?>("DateNonPO");

                    b.Property<DateTimeOffset?>("DateSPB");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("DivisionSPB")
                        .HasMaxLength(64);

                    b.Property<string>("IdProductSPB")
                        .HasMaxLength(64);

                    b.Property<string>("IncomeTaxBy")
                        .HasMaxLength(64);

                    b.Property<int>("IncomeTaxId")
                        .HasMaxLength(64);

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(64);

                    b.Property<double>("IncomeTaxRate")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<string>("NameProductSPB")
                        .HasMaxLength(64);

                    b.Property<string>("NoPOSPB")
                        .HasMaxLength(64);

                    b.Property<string>("NoSPB")
                        .HasMaxLength(64);

                    b.Property<decimal>("PriceTotalSPB");

                    b.Property<string>("Remark")
                        .HasMaxLength(255);

                    b.Property<string>("SupplierCode")
                        .HasMaxLength(64);

                    b.Property<string>("SupplierName")
                        .HasMaxLength(64);

                    b.Property<double>("Total");

                    b.Property<int>("VBRealizationId");

                    b.Property<bool>("isGetPPh");

                    b.Property<bool>("isGetPPn");

                    b.HasKey("Id");

                    b.HasIndex("VBRealizationId");

                    b.ToTable("RealizationVbDetails");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.RealizationVbModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount");

                    b.Property<decimal>("AmountNonPO");

                    b.Property<string>("AmountUnitLoadNoVB")
                        .HasMaxLength(255);

                    b.Property<decimal>("Amount_VB");

                    b.Property<DateTimeOffset>("CloseDate");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<string>("CurrencyDescription")
                        .HasMaxLength(64);

                    b.Property<decimal>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("Date");

                    b.Property<DateTimeOffset>("DateEstimate");

                    b.Property<DateTimeOffset>("DateVB");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<decimal>("DifferenceReqReal");

                    b.Property<int>("DivisionId");

                    b.Property<string>("DivisionName");

                    b.Property<decimal>("IncomeTaxAmount");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<int>("Position");

                    b.Property<string>("Reason_NotVerified")
                        .HasMaxLength(255);

                    b.Property<string>("RequestVbName")
                        .HasMaxLength(64);

                    b.Property<string>("StatusReqReal")
                        .HasMaxLength(64);

                    b.Property<string>("TypeWithOrWithoutVB")
                        .HasMaxLength(255);

                    b.Property<string>("UnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitLoad")
                        .HasMaxLength(64);

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.Property<string>("UsageVBRequest")
                        .HasMaxLength(255);

                    b.Property<int>("VBId");

                    b.Property<string>("VBNo")
                        .HasMaxLength(64);

                    b.Property<string>("VBNoRealize")
                        .HasMaxLength(64);

                    b.Property<string>("VBRealizeCategory")
                        .HasMaxLength(64);

                    b.Property<decimal>("VatAmount");

                    b.Property<DateTimeOffset>("VerifiedDate");

                    b.Property<string>("VerifiedName")
                        .HasMaxLength(255);

                    b.Property<bool>("isClosed");

                    b.Property<bool>("isNotVeridied");

                    b.Property<bool>("isVerified");

                    b.HasKey("Id");

                    b.ToTable("RealizationVbs");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.VbRequestModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active");

                    b.Property<decimal>("Amount");

                    b.Property<bool>("Apporve_Status");

                    b.Property<DateTimeOffset?>("ApproveDate");

                    b.Property<DateTimeOffset?>("CompleteDate");

                    b.Property<bool>("Complete_Status");

                    b.Property<string>("CreatedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("CreatedUtc");

                    b.Property<string>("CurrencyCode")
                        .HasMaxLength(64);

                    b.Property<string>("CurrencyDescription")
                        .HasMaxLength(64);

                    b.Property<int>("CurrencyId");

                    b.Property<decimal>("CurrencyRate");

                    b.Property<string>("CurrencySymbol")
                        .HasMaxLength(64);

                    b.Property<DateTimeOffset>("Date");

                    b.Property<DateTimeOffset>("DateEstimate");

                    b.Property<string>("DeletedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("DeletedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("DeletedUtc");

                    b.Property<string>("IncomeTaxBy")
                        .HasMaxLength(64);

                    b.Property<string>("IncomeTaxId")
                        .HasMaxLength(64);

                    b.Property<string>("IncomeTaxName")
                        .HasMaxLength(64);

                    b.Property<string>("IncomeTaxRate")
                        .HasMaxLength(64);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedAgent")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("LastModifiedBy")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<DateTime>("LastModifiedUtc");

                    b.Property<bool>("Realization_Status");

                    b.Property<string>("UnitCode")
                        .HasMaxLength(64);

                    b.Property<int>("UnitDivisionId");

                    b.Property<string>("UnitDivisionName")
                        .HasMaxLength(64);

                    b.Property<int>("UnitId");

                    b.Property<string>("UnitLoad")
                        .HasMaxLength(255);

                    b.Property<string>("UnitName")
                        .HasMaxLength(64);

                    b.Property<string>("Usage")
                        .HasMaxLength(255);

                    b.Property<string>("Usage_Input")
                        .HasMaxLength(255);

                    b.Property<decimal>("VBMoney");

                    b.Property<string>("VBNo")
                        .HasMaxLength(64);

                    b.Property<string>("VBRequestCategory")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("VbRequests");
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.DPPVATBankExpenditureNote.DPPVATBankExpenditureNoteDetailDoModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.DPPVATBankExpenditureNote.DPPVATBankExpenditureNoteDetailModel", "DPPVATBankExpenditureNoteDetail")
                        .WithMany("DPPVATBankExpenditureNoteDetailDos")
                        .HasForeignKey("DPPVATBankExpenditureNoteDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentFinance.BankCashReceipt.BankCashReceiptItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentFinance.BankCashReceipt.BankCashReceiptModel", "BankCashReceiptModel")
                        .WithMany("Items")
                        .HasForeignKey("BankCashReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentFinance.Memorial.GarmentFinanceMemorialItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentFinance.Memorial.GarmentFinanceMemorialModel", "GarmentFinanceMemorialModel")
                        .WithMany("Items")
                        .HasForeignKey("MemorialId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentInvoicePayment.GarmentInvoicePaymentItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentInvoicePayment.GarmentInvoicePaymentModel", "GarmentInvoicePaymentModel")
                        .WithMany("Items")
                        .HasForeignKey("InvoicePaymentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentInvoicePurchasingDisposition.GarmentInvoicePurchasingDispositionItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentInvoicePurchasingDisposition.GarmentInvoicePurchasingDispositionModel", "GarmentInvoicePurchasingDisposition")
                        .WithMany("Items")
                        .HasForeignKey("GarmentInvoicePurchasingDispositionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentPurchasingPphBankExpenditureNote.GarmentPurchasingPphBankExpenditureNoteInvoiceModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentPurchasingPphBankExpenditureNote.GarmentPurchasingPphBankExpenditureNoteItemModel", "GarmentPurchasingPphBankExpenditureNoteItem")
                        .WithMany("GarmentPurchasingPphBankExpenditureNoteInvoices")
                        .HasForeignKey("GarmentPurchasingPphBankExpenditureNoteItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentPurchasingPphBankExpenditureNote.GarmentPurchasingPphBankExpenditureNoteItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.GarmentPurchasingPphBankExpenditureNote.GarmentPurchasingPphBankExpenditureNoteModel", "GarmentPurchasingPphBankExpenditureNote")
                        .WithMany("Items")
                        .HasForeignKey("GarmentPurchasingPphBankExpenditureNoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.MasterCOA.COAModel", "COA")
                        .WithMany()
                        .HasForeignKey("COAId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.JournalTransaction.JournalTransactionModel", "JournalTransaction")
                        .WithMany("Items")
                        .HasForeignKey("JournalTransactionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.Memo.MemoItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.Memo.MemoModel", "Memo")
                        .WithMany("Items")
                        .HasForeignKey("MemoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.MemoGarmentPurchasing.MemoGarmentPurchasingDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.MemoGarmentPurchasing.MemoGarmentPurchasingModel", "MemoGarmentPurchasing")
                        .WithMany("MemoGarmentPurchasingDetails")
                        .HasForeignKey("MemoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteItemModel", "PaymentDispositionNoteItem")
                        .WithMany("Details")
                        .HasForeignKey("PaymentDispositionNoteItemId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.PaymentDispositionNote.PaymentDispositionNoteModel", "PaymentDispositionNote")
                        .WithMany("Items")
                        .HasForeignKey("PaymentDispositionNoteId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingDispositionExpedition.PurchasingDispositionExpeditionItemModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.PurchasingDispositionExpedition.PurchasingDispositionExpeditionModel", "PurchasingDispositionExpedition")
                        .WithMany("Items")
                        .HasForeignKey("PurchasingDispositionExpeditionId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.SalesReceipt.SalesReceiptDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.Models.SalesReceipt.SalesReceiptModel", "SalesReceiptModel")
                        .WithMany("SalesReceiptDetails")
                        .HasForeignKey("SalesReceiptId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.Models.VbNonPORequest.VbRequestDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.VbRequestModel", "VbRequestDetail")
                        .WithMany("VbRequestDetail")
                        .HasForeignKey("VBId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Com.Danliris.Service.Finance.Accounting.Lib.RealizationVbDetailModel", b =>
                {
                    b.HasOne("Com.Danliris.Service.Finance.Accounting.Lib.RealizationVbModel", "RealizationVbDetail")
                        .WithMany("RealizationVbDetail")
                        .HasForeignKey("VBRealizationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
